possible_outcomes <- c(0, 1, 2, 3, 4, 5)
outcome_probabilities <- c(0.1, 0.5, 0.2, 0.1, 0.05, 0.05)
n_data_points <- 400
set.seed(2)
fake_data_points <- sample(possible_outcomes,
n_data_points,
replace=T,
prob=outcome_probabilities)
set.seed(NULL)
fake_data_set <- tibble::data_frame(`Fake measurement`=fake_data_points)
print(fake_data_points)
print(fake_data_points)
print(fake_data_points)
set.seed(3)
set.seed(NULL)
fake_data_set <- tibble::data_frame(`Fake measurement`=fake_data_points)
print(fake_data_points)
set.seed(3)
fake_data_points <- sample(possible_outcomes,
n_data_points,
replace=T,
prob=outcome_probabilities)
set.seed(NULL)
fake_data_set <- tibble::data_frame(`Fake measurement`=fake_data_points)
print(fake_data_points)
print(fake_data_points)
set.seed(1)
print(fake_data_points)
fake_data_points <- sample(possible_outcomes,
n_data_points,
replace=T,
prob=outcome_probabilities)
set.seed(NULL)
fake_data_set <- tibble::data_frame(`Fake measurement`=fake_data_points)
print(fake_data_points)
grouped_violin_plot <- function(d, var, grouping_var) {
p + ggplot2::geom_violin()
grouped_violin_plot <- function(d, var, grouping_var) {
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
ggplot(iris, aes(Species, Sepal.Length)) +
geom_violin()
ggplot(iris, aes(Species, Sepal.Length)) +
geom_violin()
library(ggplot2)
library(dyplr)
library(dplyr)
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=d, fill=grouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=d))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=dgrouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=dgrouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + geom_violin()
p + labs(title="Iris data")
p + scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_color_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_color_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin(trim=FALSE)
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p + ggplot2::geom_violin(trim=FALSE)
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var)) + ggplot2::geom_violin()
p + ggplot2::geom_violin(trim=FALSE)
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var)) + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var)) +ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var))
p+ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("#FFFF66", "#0099CC", "#996633"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
possible_outcomes <- c(0, 1, 2, 3, 4, 5)
outcome_probabilities <- c(0.1, 0.5, 0.2, 0.1, 0.05, 0.05)
n_data_points <- 400
set.seed(1)
fake_data_points <- sample(possible_outcomes,
n_data_points,
replace=T,
prob=outcome_probabilities)
set.seed(NULL)
fake_data_set <- tibble::data_frame(`Fake measurement`=fake_data_points)
print(fake_data_points)
?data.frame
?tibble::data_frame
?data.frame
?ggplot2::scale_fill_manual
?ggplot2::
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var)) + ggplot2::geom_ablineviolin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("FFCC33", "99CCFF", "99600"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
grouped_violin_plot <- function(d, var, grouping_var) {
p <- ggplot2::ggplot(d, ggplot2::aes_string(y=var,x=grouping_var, fill=grouping_var)) + ggplot2::geom_violin()
p + ggplot2::labs(title="Iris data")
p + ggplot2::scale_fill_manual(values=c("FFCC33", "99CCFF", "99600"))
return(p)
}
print(grouped_violin_plot(iris, "Sepal.Length", "Species"))
?ggplot2::labs
